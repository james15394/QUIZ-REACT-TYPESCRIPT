[{"D:\\ts\\quiz\\src\\index.tsx":"1","D:\\ts\\quiz\\src\\App.tsx":"2","D:\\ts\\quiz\\src\\API.ts":"3","D:\\ts\\quiz\\src\\App.style.ts":"4","D:\\ts\\quiz\\src\\features\\questionCard\\questioncard\\QuestionCard.tsx":"5","D:\\ts\\quiz\\src\\features\\questionCard\\home\\Home.tsx":"6","D:\\ts\\quiz\\src\\reducer.ts":"7","D:\\ts\\quiz\\src\\StateProvider.js":"8","D:\\ts\\quiz\\src\\features\\questionCard\\endgame\\EndGame.tsx":"9","D:\\ts\\quiz\\src\\features\\questionCard\\wrongAnswers\\WrongAnswers.tsx":"10","D:\\ts\\quiz\\src\\features\\questionCard\\index.ts":"11","D:\\ts\\quiz\\src\\features\\questionCard\\header\\Header.tsx":"12"},{"size":740,"mtime":1609853125295,"results":"13","hashOfConfig":"14"},{"size":1035,"mtime":1609847292834,"results":"15","hashOfConfig":"14"},{"size":543,"mtime":1609715537918,"results":"16","hashOfConfig":"14"},{"size":1368,"mtime":1609851967455,"results":"17","hashOfConfig":"14"},{"size":2404,"mtime":1609854757436,"results":"18","hashOfConfig":"14"},{"size":1957,"mtime":1609853041502,"results":"19","hashOfConfig":"14"},{"size":1025,"mtime":1609853058755,"results":"20","hashOfConfig":"14"},{"size":373,"mtime":1609483825831,"results":"21","hashOfConfig":"14"},{"size":1347,"mtime":1609802782659,"results":"22","hashOfConfig":"14"},{"size":1300,"mtime":1609846832432,"results":"23","hashOfConfig":"14"},{"size":293,"mtime":1609716289111,"results":"24","hashOfConfig":"14"},{"size":337,"mtime":1609802429545,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"oypmh3",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\ts\\quiz\\src\\index.tsx",[],["55","56"],"D:\\ts\\quiz\\src\\App.tsx",[],"D:\\ts\\quiz\\src\\API.ts",[],"D:\\ts\\quiz\\src\\App.style.ts",[],"D:\\ts\\quiz\\src\\features\\questionCard\\questioncard\\QuestionCard.tsx",[],"D:\\ts\\quiz\\src\\features\\questionCard\\home\\Home.tsx",["57","58"],"import {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchQuizs } from \"../../../API\";\r\nimport { useStyles } from \"../../../App.style\";\r\nimport { useStateValue } from \"../../../StateProvider\";\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [state, dispatch] = useStateValue();\r\n  const [loading, setLoading] = useState(false);\r\n  let { noOfQues, questions, number, score } = state;\r\n  const start = () => {\r\n    if (noOfQues) {\r\n      const getQuestions = async () => {\r\n        setLoading(true);\r\n        const allQuestions = await fetchQuizs(noOfQues);\r\n        dispatch({ type: \"GET_QUES\", payload: allQuestions });\r\n        setLoading(false);\r\n        if (allQuestions) {\r\n          history.push(`/card/${number}`);\r\n        }\r\n      };\r\n      getQuestions();\r\n    }\r\n  };\r\n  const handleSetNoOfQues = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newNoOfQues: number = +e.target.value;\r\n    if (newNoOfQues) {\r\n      dispatch({ type: \"INCREASE_NUM OF_QUES\", payload: newNoOfQues });\r\n    }\r\n  };\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <CardActions>\r\n          <form noValidate autoComplete=\"off\">\r\n            <TextField\r\n              label=\"Number of questions\"\r\n              variant=\"outlined\"\r\n              onChange={handleSetNoOfQues}\r\n            />\r\n          </form>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            onClick={start}\r\n            startIcon={\r\n              loading && <CircularProgress color=\"secondary\" size=\"1rem\" />\r\n            }\r\n          >\r\n            Play\r\n          </Button>\r\n        </CardActions>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\ts\\quiz\\src\\reducer.ts",[],"D:\\ts\\quiz\\src\\StateProvider.js",[],["59","60"],"D:\\ts\\quiz\\src\\features\\questionCard\\endgame\\EndGame.tsx",["61","62","63"],"import React from \"react\";\r\nimport { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\r\nimport { useStyles } from \"../../../App.style\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useStateValue } from \"../../../StateProvider\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst EndGame = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [state, dispatch] = useStateValue();\r\n\r\n  let { wrongAnswers, score } = state;\r\n\r\n  return (\r\n    <Grid container className={classes.card}>\r\n      <Grid container alignItems=\"center\" direction=\"column\" spacing={2}>\r\n        <Grid item>\r\n          <Typography gutterBottom>Your score: {score} </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Link href=\"/\">\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Play again\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n        {wrongAnswers.length > 0 && (\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => history.push(\"/wrongAnswers\")}\r\n            >\r\n              Show incorrect answers\r\n            </Button>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default EndGame;\r\n","D:\\ts\\quiz\\src\\features\\questionCard\\wrongAnswers\\WrongAnswers.tsx",["64"],"import { Button, Card, CardContent, Link, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"../../../App.style\";\r\nimport { useStateValue } from \"../../../StateProvider\";\r\n\r\nconst WrongAnswers = () => {\r\n  const classes = useStyles();\r\n  const [state, dispatch] = useStateValue();\r\n  const { wrongAnswers } = state;\r\n\r\n  return (\r\n    <>\r\n      {wrongAnswers.length > 0 && (\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            {wrongAnswers.map((wrongAnswer: any) => (\r\n              <>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  gutterBottom\r\n                  dangerouslySetInnerHTML={{ __html: wrongAnswer.question }}\r\n                />\r\n\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  gutterBottom\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: wrongAnswer.correct_answer,\r\n                  }}\r\n                />\r\n              </>\r\n            ))}\r\n            <Link href=\"/\">\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Play again\r\n              </Button>\r\n            </Link>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WrongAnswers;\r\n","D:\\ts\\quiz\\src\\features\\questionCard\\index.ts",[],"D:\\ts\\quiz\\src\\features\\questionCard\\header\\Header.tsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":20,"column":19,"nodeType":"71","messageId":"72","endLine":20,"endColumn":28},{"ruleId":"69","severity":1,"message":"73","line":20,"column":38,"nodeType":"71","messageId":"72","endLine":20,"endColumn":43},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"74","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":14},{"ruleId":"69","severity":1,"message":"75","line":2,"column":16,"nodeType":"71","messageId":"72","endLine":2,"endColumn":27},{"ruleId":"69","severity":1,"message":"76","line":12,"column":17,"nodeType":"71","messageId":"72","endLine":12,"endColumn":25},{"ruleId":"69","severity":1,"message":"76","line":8,"column":17,"nodeType":"71","messageId":"72","endLine":8,"endColumn":25},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"@typescript-eslint/no-unused-vars","'questions' is assigned a value but never used.","Identifier","unusedVar","'score' is assigned a value but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]